services:
  lakefsdb:
    container_name: lakefs_server
    image: treeverse/lakefs:1.7.0
    ports:
      - "8001:8000"
    environment:
      LAKEFS_INSTALLATION_USER_NAME: "admin"
      LAKEFS_INSTALLATION_ACCESS_KEY_ID: ${ACCESS_KEY}
      LAKEFS_INSTALLATION_SECRET_ACCESS_KEY: ${SECRET_KEY}
      LAKEFS_DATABASE_TYPE: "local"
      LAKEFS_AUTH_ENCRYPT_SECRET_KEY: "your_very_secure_random_string_at_least_32_chars_CHANGE_ME"
      LAKEFS_BLOCKSTORE_TYPE: "local"
      LAKEFS_BLOCKSTORE_LOCAL_PATH: "/app/data"
    volumes:
      - ./data/lakefs_storage:/app/data
    networks:
      - PrefectNetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/_health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  database:
    container_name: dsi321-database-1
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    volumes:
      - prefect_db_data:/var/lib/postgresql/data
    networks:
      - PrefectNetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  server:
    container_name: prefect_server
    image: prefecthq/prefect:3.0.5-python3.11
    restart: always
    volumes:
      - prefect_server_data:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      PREFECT_UI_URL: http://127.0.0.1:4200
      PREFECT_API_URL: http://server:4200/api
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
    ports:
      - "4200:4200"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - PrefectNetwork

  worker:
    container_name: prefect_worker_egat
    build:
      context: .
      dockerfile: config/docker/Dockerfile.worker
    restart: always
    command: ["prefect", "worker", "start", "--pool", "default-agent-pool"]
    environment:
      PREFECT_API_URL: http://server:4200/api
    volumes:
      - ./src:/opt/prefect/app/src
      - ./.env:/opt/prefect/app/.env
    depends_on:
      server:
        condition: service_started
      lakefsdb:
        condition: service_healthy
    networks:
      - PrefectNetwork

  cli:
    container_name: prefect_cli_egat
    build:
      context: .
      dockerfile: config/docker/Dockerfile.cli
    entrypoint: "bash"
    working_dir: "/opt/prefect/app"
    environment:
      PREFECT_API_URL: http://server:4200/api
    volumes:
      - ./src:/opt/prefect/app/src
      - ./.env:/opt/prefect/app/.env
    networks:
      - PrefectNetwork
    depends_on:
      - server
      - database
      - lakefsdb

  streamlit:
    container_name: streamlit_app_egat
    build:
      context: .
      dockerfile: config/docker/Dockerfile.streamlit
    ports:
      - "8501:8501"
    working_dir: "/app"
    volumes:
      - ./src/frontend:/app/src/frontend
      - ./.env:/app/.env
    networks:
      - PrefectNetwork
    depends_on:
      server:
        condition: service_started
      lakefsdb:
        condition: service_healthy

volumes:
  prefect_db_data:
  prefect_server_data:

networks:
  PrefectNetwork:
    driver: bridge